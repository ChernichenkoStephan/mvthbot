basePath: /api/v1
host: un000nu.mvth.pw
info:
  contact:
    email: stephan@un000nu.pw
    name: API Support
    url: http://www.t.me/un000nu
  description: This is math solving API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Mvthbot API
  version: 0.0.1
paths:
  /:
    delete:
      consumes:
      - application/json
      description: Deletes users variables (you can ask for specific in body) (user
        from given JWT)
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Deletes users variables
      tags:
      - user
      - api
    get:
      consumes:
      - application/json
      description: Returns users variables (you can ask for specific in body) (user
        from given JWT)
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Returns users variables value
      tags:
      - user
      - api
    post:
      consumes:
      - application/json
      description: Processes multiple statements given in body
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Processes multiple statements
      tags:
      - user
      - solve
      - api
  /{name}:
    delete:
      consumes:
      - application/json
      description: Deletes users variable (user from given JWT)
      parameters:
      - description: variables name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Deletes users variable
      tags:
      - user
      - api
    get:
      description: Returns users variable value (user from given JWT)
      parameters:
      - description: variables name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Returns users variable value
      tags:
      - user
      - api
  /{name}/{equation}:
    post:
      description: Sets result of equation given in path variable to variable
      parameters:
      - description: variables name
        in: path
        name: name
        required: true
        type: string
      - description: equation for solve (2+2) encoded in LF
        in: path
        name: equation
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Sets result of equation to variable
      tags:
      - user
      - solve
      - api
  /auth/login:
    post:
      consumes:
      - application/json
      description: Signs in user with telegram username and password generated by
        bot
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: User sign in
      tags:
      - auth
      - users
  /auth/logout:
    post:
      description: Signs out users wiith JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Users sign out
      tags:
      - auth
      - users
  /health:
    get:
      description: Check for the health of the API.
      responses:
        "200":
          description: OK
      summary: Health check
      tags:
      - api
  /history:
    delete:
      description: Clears variables and statements hiistory from user defined by JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Deletes all users history
      tags:
      - user
      - api
    get:
      description: Returns variables and statements hiistory for user defined by JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Returns history
      tags:
      - user
      - api
  /solve:
    post:
      consumes:
      - application/json
      description: Solves equations array given in request body
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Multiple solving of equations
      tags:
      - solve
      - api
  /solve/{equation}:
    post:
      description: Solves equation given in url param
      parameters:
      - description: equation for solve (2+2) encoded in LF
        in: path
        name: equation
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Basic equations solving
      tags:
      - solve
      - api
swagger: "2.0"
